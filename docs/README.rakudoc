=begin pod

=head1 NAME

B<PDF::Combiner> - Provides routines and a program to combine and
title PDF documents

=head1 SYNOPSIS
=begin code :lang<raku>
use PDF::Combiner;
combine-pdfs config=our-israel-tour.txt
compress-pdf our-israel-tour.pdf
=end code

=head1 Installation requirements

B<PDF::Combiner> requires the system binary program, C<ps2pdf>, in
order to compress PDF files. To install it on a Debian system,
execute:

=code sudo apt-get install ps2pdf

To compress any PDF execute:

=code ps2pdf -dPDFSETTINGS=/ebook large.pdf smaller.pdf # 150 dpi

=code ps2pdf -dPDFSETTINGS=/printer large.pdf smaller.pdf # 300 dpi

A 78 Mb combined PDF compressed to the following sizes:

=item with '-dPDFSETTINGS=/ebook': 2.9 Mb

=item with '-dPDFSETTINGS=/printer': 15 Mb

I could not see any differences in one printed page, but your results
may vary. Choose output file compresion on the command line.  You may
also set it in your project configuration file.

=head1 DESCRIPTION

B<PDF::Combiner> is a simple but useful tool to combine PDF documents
into a single PDF document.

In the example above, B<our-israel-tour.txt> is a simple formatted
text file containing several types of lines. See the example project
C<config> files in directory C</example-project> for usable examples
of the input file.

Note at the moment, the PDF files are expected to be in the same
directory as the project file. If that is a problem for your use case,
please file an issue.

=head2 Changing PDF Format Versions

Currently, the Raku PDF tools can't reliably handle versions greater than
1.4. However, there is a Ghostscript procedure that may be able to
downgrade without causing too much fidelity and is worth trying.
The code here was obtained from Stack ********

=begin code

=end code

=head1 C<config> file

The configuration (or project) file is a typical text file with data
in single-line format for most options or in blocks of text. Its
suffix is not specified, but the example files have extensions of
C<.txt> (the author's preference). Options are entered in a format
taken from Rakudoc: C<=option-name value....> or C<=begin
option-name>...C<=end option-name>..

Blank lines are ignored (except in text blocks) and comments on a line
begin at the first C<#> character and continue to the end of the line.

Note comments in a text block resulting in a blank line will result in
that blank line being retained in the block.

=head2 Options

=begin item
C<=begin title>...C<=end title>

The lines between the begin/end options are used to populate a cover
with the first line being the title and the following lines shown
below it after some blank lines.

Note no cover is produced without this text block, nor is any cover
produced if B<all> lines are blank.
=end item

=begin item
C<=numbers>  value?

The 'value' is optional.  Without it, the result is C<True> if the
option alone is present.  If the option is B<not> present, the result
is C<False>.  If the 'value' is present, it is evaluated for
truthiness.

A true value currently produces page numbers on each page (except any
cover which is number one but not shown); format: 'Page N of M'.

A value of 'per-file' allows a custom page number define per input PDF file.
For example:

=begin code
pd01.pdf      page01
pdX.pdf       page02
=end code

=end item

=begin item
C<=two-sided> value?

The 'value' is optional.  Without it, the result is C<True> if the
option alone is present.  If the option is B<not> present, the result
is C<False>.  If the 'value' is present, it is evaluated for
truthiness.
=end item

=begin item
C<=back> value?

The 'value' is optional.  Without it, the result is C<True> if the
option alone is present.  If the option is B<not> present, the result
is C<False>.  If the 'value' is present, it is evaluated for
truthiness.
=end item

=begin item
C<=outfile> value!

The option and 'value' are required.

'value' is the file name of the new document which should have no
spaces and have a suffix of C<.pdf>.
=end item

=begin item
C<=paper> value!

The option is B<not> required.  But if it is used, then 'value' is
required.

'value' defines the paper size. Current choices are 'Letter' or
'A4'. If the option is not used, the default size is 'Letter'.
=end item

=begin item
C<=zip> value!

The option is B<not> required.  But if it is used, then 'value' is
required.

'value' defines the compression level for the output file. It
B<must> be either '150' or '300' (dots per inch). It is very
useful for PDFs generated from scans. The '150' DPI approximates
the density of an ebook while '300' DPI approximates the
output from a printer.
=end item

=head1 Possible additional options

=begin item
C<=begin introduction>...C<=end introduction>
=end item

=head1 CREDITS

Thanks to prolific Raku module distribution author David Warring for
his wonderful PDF project (L<https://github.com/pdf-raku>) and
especially for his example of how to combine PDF files into one.

=head1 AUTHOR

Tom Browder <tbrowder@acm.org>

=head1 COPYRIGHT AND LICENSE

Â© 2022-2024 Tom Browder

This library is free software; you may redistribute it or modify it under the Artistic License 2.0.

=end pod
